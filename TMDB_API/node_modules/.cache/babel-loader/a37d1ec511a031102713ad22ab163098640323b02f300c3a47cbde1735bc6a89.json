{"ast":null,"code":"import { fetchPopfilm, rechercheFilm, pageSuiva, pagePrevi, rechercheTvs, rechercheTves, FETCH_FILM_DETAILS, FETCH_SERIE_DETAILS } from \"./typeaction\";\nimport axios from \"axios\";\nconst api_key = process.env.REACT_APP_API_KEY;\nexport const fetchFilmDetails = filmId => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}?api_key=${api_key}`);\n      dispatch({\n        type: FETCH_FILM_DETAILS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(\"Error fetching film details:\", error);\n    }\n  };\n};\nexport const fetchSerieDetails = serieId => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/tv/${serieId}?api_key=${api_key}`);\n      dispatch({\n        type: FETCH_SERIE_DETAILS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(\"Error fetching serie details:\", error);\n    }\n  };\n};\nexport const fetchPopfilms = page => {\n  return async dispatch => {\n    const reponse = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}&page=${page}`);\n    dispatch({\n      type: fetchPopfilm,\n      payload: {\n        page,\n        film: reponse.data.results,\n        totalPage: reponse.data.total_pages\n      }\n    });\n  };\n};\nexport const rechercheFilms = (recherche, page) => {\n  return async dispatch => {\n    const reponse = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&page=${page}&query=${recherche}`);\n    dispatch({\n      type: rechercheFilm,\n      payload: {\n        recherche,\n        page,\n        film: reponse.data.results,\n        totalPage: reponse.data.total_pages\n      }\n    });\n  };\n};\nexport const rechercheTv = page => {\n  return async dispatch => {\n    const reponse = await axios.get(`https://api.themoviedb.org/3/trending/tv/day?api_key=${api_key}&page=${page}`);\n    dispatch({\n      type: rechercheTvs,\n      payload: {\n        page,\n        tv: reponse.data.results,\n        totalPage: reponse.data.total_pages\n      }\n    });\n  };\n};\nexport const recherchesTv = (recherche, page) => {\n  return async dispatch => {\n    const reponse = await axios.get(`https://api.themoviedb.org/3/search/tv?api_key=${api_key}&page=${page}&query=${recherche}`);\n    dispatch({\n      type: rechercheTves,\n      payload: {\n        recherche,\n        page,\n        tv: reponse.data.results,\n        totalPage: reponse.data.total_pages\n      }\n    });\n  };\n};\nexport const recherchesTvModal = (recherche, page) => {\n  return async dispatch => {\n    const reponse = await axios.get(`https://api.themoviedb.org/3/search/tv?api_key=${api_key}&page=${page}&query=${recherche}`);\n    dispatch({\n      type: rechercheTvModale,\n      payload: {\n        recherche,\n        page,\n        tv: reponse.data.results,\n        totalPage: reponse.data.total_pages\n      }\n    });\n  };\n};\nexport const rechercheFilmsModal = (recherche, page) => {\n  return async dispatch => {\n    const reponse = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&page=${page}&query=${recherche}`);\n    dispatch({\n      type: rechercheFilmModal,\n      payload: {\n        recherche,\n        page,\n        film: reponse.data.results,\n        totalPage: reponse.data.total_pages\n      }\n    });\n  };\n};\nexport const pageSuiv = {\n  type: pageSuiva\n};\nexport const pagePrev = {\n  type: pagePrevi\n};","map":{"version":3,"names":["fetchPopfilm","rechercheFilm","pageSuiva","pagePrevi","rechercheTvs","rechercheTves","FETCH_FILM_DETAILS","FETCH_SERIE_DETAILS","axios","api_key","process","env","REACT_APP_API_KEY","fetchFilmDetails","filmId","dispatch","response","get","type","payload","data","error","console","fetchSerieDetails","serieId","fetchPopfilms","page","reponse","film","results","totalPage","total_pages","rechercheFilms","recherche","rechercheTv","tv","recherchesTv","recherchesTvModal","rechercheTvModale","rechercheFilmsModal","rechercheFilmModal","pageSuiv","pagePrev"],"sources":["C:/Users/Utilisateur/OneDrive/Desktop/MesProjets/TMDB_API/src/action.js"],"sourcesContent":["import {\r\n  fetchPopfilm,\r\n  rechercheFilm,\r\n  pageSuiva,\r\n  pagePrevi,\r\n  rechercheTvs,\r\n  rechercheTves,\r\n  FETCH_FILM_DETAILS,\r\n  FETCH_SERIE_DETAILS\r\n} from \"./typeaction\";\r\nimport axios from \"axios\";\r\nconst api_key = process.env.REACT_APP_API_KEY;\r\n\r\nexport const fetchFilmDetails = (filmId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.themoviedb.org/3/movie/${filmId}?api_key=${api_key}`\r\n      );\r\n\r\n      dispatch({\r\n        type: FETCH_FILM_DETAILS,\r\n        payload: response.data \r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching film details:\", error);\r\n    }\r\n  };\r\n};\r\nexport const fetchSerieDetails = (serieId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.themoviedb.org/3/tv/${serieId}?api_key=${api_key}`\r\n      );\r\n\r\n      dispatch({\r\n        type: FETCH_SERIE_DETAILS,\r\n        payload: response.data\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching serie details:\", error);\r\n    }\r\n  };\r\n};\r\nexport const fetchPopfilms = (page) => {\r\n  return async (dispatch) => {\r\n    const reponse = await axios.get(\r\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}&page=${page}`\r\n    );\r\n    dispatch({\r\n      type: fetchPopfilm,\r\n      payload: { page, film: reponse.data.results, totalPage: reponse.data.total_pages  },\r\n    });\r\n  };\r\n};\r\nexport const rechercheFilms = (recherche, page) => {\r\n  return async (dispatch) => {\r\n    const reponse = await axios.get(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&page=${page}&query=${recherche}`\r\n    );\r\n    dispatch({\r\n      type: rechercheFilm,\r\n      payload: { recherche, page, film: reponse.data.results, totalPage: reponse.data.total_pages  },\r\n    });\r\n  };\r\n};\r\nexport const rechercheTv = (page) => {\r\n  return async (dispatch) => {\r\n    const reponse = await axios.get(\r\n      `https://api.themoviedb.org/3/trending/tv/day?api_key=${api_key}&page=${page}`\r\n    );\r\n    dispatch({\r\n      type: rechercheTvs,\r\n      payload: { page, tv: reponse.data.results, totalPage: reponse.data.total_pages  },\r\n    });\r\n  };\r\n};\r\nexport const recherchesTv = (recherche,page) => {\r\n  return async (dispatch) => {\r\n    const reponse = await axios.get(\r\n      `https://api.themoviedb.org/3/search/tv?api_key=${api_key}&page=${page}&query=${recherche}`\r\n    );\r\n    dispatch({\r\n      type: rechercheTves,\r\n      \r\n      payload: { recherche, page, tv: reponse.data.results, totalPage: reponse.data.total_pages },\r\n    });\r\n  };\r\n};\r\nexport const recherchesTvModal = (recherche,page) => {\r\n  return async (dispatch) => {\r\n    const reponse = await axios.get(\r\n      `https://api.themoviedb.org/3/search/tv?api_key=${api_key}&page=${page}&query=${recherche}`\r\n    );\r\n    dispatch({\r\n      type: rechercheTvModale,\r\n      \r\n      payload: { recherche, page, tv: reponse.data.results, totalPage: reponse.data.total_pages },\r\n    });\r\n  };\r\n};\r\nexport const rechercheFilmsModal = (recherche, page) => {\r\n  return async (dispatch) => {\r\n    const reponse = await axios.get(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&page=${page}&query=${recherche}`\r\n    );\r\n    dispatch({\r\n      type: rechercheFilmModal,\r\n      payload: { recherche, page, film: reponse.data.results, totalPage: reponse.data.total_pages  },\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const pageSuiv = {type:pageSuiva};\r\nexport const pagePrev = {type:pagePrevi};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}